{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\will\\\\OneDrive\\\\Documents\\\\College JMU\\\\2019 F Semester\\\\ps_demo\\\\ps_git\\\\perfect_sense_demo\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\will\\\\OneDrive\\\\Documents\\\\College JMU\\\\2019 F Semester\\\\ps_demo\\\\ps_git\\\\perfect_sense_demo\\\\frontend\\\\src\\\\pages\\\\ArticlesList.js\";\nimport React, { useState, useEffect } from 'react';\nimport VotesSection from '../pages/VotesSection';\n\nconst ArticlesList = () => {\n  //the [] in the second argument stops this from running whenever react updates\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        articles = _useState2[0],\n        setArticles = _useState2[1];\n\n  useEffect(() => {\n    const getArticles = async () => {\n      const result = await fetch(\"/api/articles-main/all\");\n      const res = await result.json();\n      setArticles(res);\n    };\n\n    getArticles();\n  }, []); //cant call a react hook in the return so cop paste work around\n\n  const getUpdatedVotes = () => {\n    const getArticles = async () => {\n      const result = await fetch(\"/api/articles-main/all\");\n      const res = await result.json();\n      setArticles(res);\n    };\n\n    getArticles();\n  };\n\n  function mySort(arr) {\n    arr.sort(function comp(a, b) {\n      return b.votes - a.votes;\n    });\n  }\n\n  if (articles && articles.length > 0) {\n    mySort(articles);\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Pages\"), articles && articles.length && articles.map((art, key) => React.createElement(\"div\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"/article/\" + art.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, art.name), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(VotesSection, {\n    articleName: art.name,\n    votes: art.votes,\n    updateFunc: getUpdatedVotes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))));\n};\n\nexport default ArticlesList;","map":{"version":3,"sources":["C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_git\\perfect_sense_demo\\frontend\\src\\pages\\ArticlesList.js"],"names":["React","useState","useEffect","VotesSection","ArticlesList","articles","setArticles","getArticles","result","fetch","res","json","getUpdatedVotes","mySort","arr","sort","comp","a","b","votes","length","map","art","key","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAwC,OAAxC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB;AADuB,oBAESH,QAAQ,EAFjB;AAAA;AAAA,QAEhBI,QAFgB;AAAA,QAENC,WAFM;;AAGvBJ,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMK,WAAW,GAAG,YAAW;AAC3B,YAAMC,MAAM,GAAG,MAAMC,KAAK,0BAA1B;AACA,YAAMC,GAAG,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAlB;AACAL,MAAAA,WAAW,CAACI,GAAD,CAAX;AACH,KAJD;;AAKAH,IAAAA,WAAW;AAEd,GARQ,EAQN,EARM,CAAT,CAHuB,CAavB;;AACA,QAAMK,eAAe,GAAG,MAAM;AAC1B,UAAML,WAAW,GAAG,YAAW;AAC3B,YAAMC,MAAM,GAAG,MAAMC,KAAK,0BAA1B;AACA,YAAMC,GAAG,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAlB;AACAL,MAAAA,WAAW,CAACI,GAAD,CAAX;AACH,KAJD;;AAKAH,IAAAA,WAAW;AACd,GAPD;;AASA,WAASM,MAAT,CAAgBC,GAAhB,EAAqB;AACjBA,IAAAA,GAAG,CAACC,IAAJ,CAAS,SAASC,IAAT,CAAcC,CAAd,EAAgBC,CAAhB,EAAkB;AAAC,aAAOA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAAnB;AAAyB,KAArD;AACH;;AAED,MAAGd,QAAQ,IAAIA,QAAQ,CAACe,MAAT,GAAkB,CAAjC,EAAoC;AAChCP,IAAAA,MAAM,CAACR,QAAD,CAAN;AACH;;AAED,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEKA,QAAQ,IAAIA,QAAQ,CAACe,MAArB,IAA+Bf,QAAQ,CAACgB,GAAT,CAAa,CAACC,GAAD,EAAMC,GAAN,KACzC;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAE,cAAcD,GAAG,CAACE,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCF,GAAG,CAACE,IAAtC,CADJ,OACoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpD,EAEI,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAEF,GAAG,CAACE,IAA/B;AAAqC,IAAA,KAAK,EAAEF,GAAG,CAACH,KAAhD;AAAuD,IAAA,UAAU,EAAEP,eAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAD4B,CAFpC,CADJ;AAWH,CA1CD;;AA4CA,eAAeR,YAAf","sourcesContent":["import React, {useState, useEffect}from 'react';\r\nimport VotesSection from '../pages/VotesSection';\r\n\r\nconst ArticlesList = () => {\r\n    //the [] in the second argument stops this from running whenever react updates\r\n    const [articles, setArticles] = useState();\r\n    useEffect(()=> {\r\n        const getArticles = async() => {\r\n            const result = await fetch(`/api/articles-main/all`);\r\n            const res = await result.json();\r\n            setArticles(res);    \r\n        }\r\n        getArticles();\r\n\r\n    }, [])\r\n\r\n    //cant call a react hook in the return so cop paste work around\r\n    const getUpdatedVotes = () => {\r\n        const getArticles = async() => {\r\n            const result = await fetch(`/api/articles-main/all`);\r\n            const res = await result.json();\r\n            setArticles(res);    \r\n        }\r\n        getArticles();\r\n    }\r\n\r\n    function mySort(arr) {\r\n        arr.sort(function comp(a,b){return b.votes - a.votes});\r\n    }\r\n    \r\n    if(articles && articles.length > 0) {\r\n        mySort(articles);\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <h1>Pages</h1>\r\n            {articles && articles.length && articles.map((art, key) => (\r\n                <div key={key}>\r\n                    <a href={\"/article/\" + art.name}>{art.name}</a> <br/>\r\n                    <VotesSection articleName={art.name} votes={art.votes} updateFunc={getUpdatedVotes}></VotesSection>\r\n                </div>\r\n            ))}       \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ArticlesList;"]},"metadata":{},"sourceType":"module"}