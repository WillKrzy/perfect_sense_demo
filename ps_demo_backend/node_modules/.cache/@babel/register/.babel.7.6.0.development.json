{
  "{\"sourceRoot\":\"C:\\\\Users\\\\will\\\\OneDrive\\\\Documents\\\\College JMU\\\\2019 F Semester\\\\ps_demo\\\\ps_demo_backend\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\will\\\\OneDrive\\\\Documents\\\\College JMU\\\\2019 F Semester\\\\ps_demo\\\\ps_demo_backend\",\"filename\":\"C:\\\\Users\\\\will\\\\OneDrive\\\\Documents\\\\College JMU\\\\2019 F Semester\\\\ps_demo\\\\ps_demo_backend\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\will\\\\OneDrive\\\\Documents\\\\College JMU\\\\2019 F Semester\\\\ps_demo\\\\ps_demo_backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_demo_backend\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_demo_backend",
      "filename": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_demo_backend\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_demo_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_demo_backend\\src\\server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_demo_backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_demo_backend\\src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.get('/helllo', function (req, res) {\n  return res.send('hello');\n});\napp.listen(8000, function () {\n  return console.log('started');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUVBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxTQUFSLEVBQW1CLFVBQUNDLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLE9BQVQsQ0FBZDtBQUFBLENBQW5CO0FBRUFKLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLElBQVgsRUFBaUI7QUFBQSxTQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxTQUFaLENBQU47QUFBQSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHdpbGxcXE9uZURyaXZlXFxEb2N1bWVudHNcXENvbGxlZ2UgSk1VXFwyMDE5IEYgU2VtZXN0ZXJcXHBzX2RlbW9cXHBzX2RlbW9fYmFja2VuZFxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG5hcHAuZ2V0KCcvaGVsbGxvJywgKHJlcSwgcmVzKSA9PiByZXMuc2VuZCgnaGVsbG8nKSlcclxuXHJcbmFwcC5saXN0ZW4oODAwMCwgKCkgPT4gY29uc29sZS5sb2coJ3N0YXJ0ZWQnKSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "get",
        "req",
        "res",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,IAAJ,CAAS,OAAT,CAAd;AAAA,CAAnB;AAEAJ,GAAG,CAACK,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAN;AAAA,CAAjB",
      "sourceRoot": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_demo_backend\\src",
      "sourcesContent": [
        "import express from 'express';\r\n\r\nconst app = express();\r\n\r\napp.get('/helllo', (req, res) => res.send('hello'))\r\n\r\napp.listen(8000, () => console.log('started'));"
      ]
    },
    "sourceType": "script",
    "mtime": 1569221367476
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\will\\\\OneDrive\\\\Documents\\\\College JMU\\\\2019 F Semester\\\\ps_demo\\\\ps_git\\\\perfect_sense_demo\\\\ps_demo_backend\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\will\\\\OneDrive\\\\Documents\\\\College JMU\\\\2019 F Semester\\\\ps_demo\\\\ps_git\\\\perfect_sense_demo\\\\ps_demo_backend\",\"filename\":\"C:\\\\Users\\\\will\\\\OneDrive\\\\Documents\\\\College JMU\\\\2019 F Semester\\\\ps_demo\\\\ps_git\\\\perfect_sense_demo\\\\ps_demo_backend\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\will\\\\OneDrive\\\\Documents\\\\College JMU\\\\2019 F Semester\\\\ps_demo\\\\ps_git\\\\perfect_sense_demo\\\\ps_demo_backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_git\\perfect_sense_demo\\ps_demo_backend\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_git\\perfect_sense_demo\\ps_demo_backend",
      "filename": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_git\\perfect_sense_demo\\ps_demo_backend\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_git\\perfect_sense_demo\\ps_demo_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_git\\perfect_sense_demo\\ps_demo_backend\\src\\server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_git\\perfect_sense_demo\\ps_demo_backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_git\\perfect_sense_demo\\ps_demo_backend\\src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar multer = require('multer');\n\nmulter({\n  dest: 'uploads/'\n});\nvar app = (0, _express[\"default\"])(); //quick link to my mongo server\n//mongo \"mongodb+srv://cluster0-hsloz.gcp.mongodb.net/admin\"  --username willk\n//allows for easy parsing of the json\n\napp.use(_bodyParser[\"default\"].json()); //reusable set up teardown database function\n\nfunction useDataBase(_x, _x2) {\n  return _useDataBase.apply(this, arguments);\n} //upvote endpoint, post because it changes data in database\n\n\nfunction _useDataBase() {\n  _useDataBase = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee14(myFunction, res) {\n    var client, db;\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.prev = 0;\n            _context14.next = 3;\n            return _mongodb.MongoClient.connect(\"mongodb+srv://willk:uS3L3sc@cluster0-hsloz.gcp.mongodb.net/test?retryWrites=true&w=majority\", {\n              useNewUrlParser: true\n            });\n\n          case 3:\n            client = _context14.sent;\n            db = client.db(\"ps_data\");\n            _context14.next = 7;\n            return myFunction(db);\n\n          case 7:\n            client.close();\n            _context14.next = 13;\n            break;\n\n          case 10:\n            _context14.prev = 10;\n            _context14.t0 = _context14[\"catch\"](0);\n            res.status(500).json({\n              message: 'database failure',\n              error: _context14.t0\n            });\n\n          case 13:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, null, [[0, 10]]);\n  }));\n  return _useDataBase.apply(this, arguments);\n}\n\napp.post('/api/articles/:name/upvote',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            useDataBase(\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee(db) {\n                var articleName, info, result;\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        //function passed into the database func\n                        articleName = req.params.name;\n                        _context.next = 3;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        info = _context.sent;\n                        _context.next = 6;\n                        return db.collection('articles').updateOne({\n                          name: articleName\n                        }, {\n                          '$set': {\n                            votes: info.votes + 1\n                          }\n                        });\n\n                      case 6:\n                        _context.next = 8;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 8:\n                        result = _context.sent;\n                        res.status(200).json(result);\n\n                      case 10:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x5) {\n                return _ref2.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post('/api/articles/:name/downvote',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            useDataBase(\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee3(db) {\n                var articleName, info, result;\n                return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context3.next = 3;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        info = _context3.sent;\n                        _context3.next = 6;\n                        return db.collection('articles').updateOne({\n                          name: articleName\n                        }, {\n                          '$set': {\n                            votes: info.votes - 1\n                          }\n                        });\n\n                      case 6:\n                        _context3.next = 8;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 8:\n                        result = _context3.sent;\n                        res.status(200).json(result);\n\n                      case 10:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x8) {\n                return _ref4.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}()); //retreive artilce by name, undefined if two articles have the same name\n\napp.get('/api/articles/:name',\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(req, res) {\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            useDataBase(\n            /*#__PURE__*/\n            function () {\n              var _ref6 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee5(db) {\n                var articleName, info;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context5.next = 3;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        info = _context5.sent;\n                        res.status(200).json(info);\n\n                      case 5:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function (_x11) {\n                return _ref6.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}()); //listing for the list\n\napp.get('/api/articles-main/all',\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(req, res) {\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            useDataBase(\n            /*#__PURE__*/\n            function () {\n              var _ref8 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee7(db) {\n                var info;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.next = 2;\n                        return db.collection('articles').find({}, {\n                          name: 1,\n                          votes: 1\n                        }).toArray();\n\n                      case 2:\n                        info = _context7.sent;\n                        res.status(200).json(info);\n\n                      case 4:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7);\n              }));\n\n              return function (_x14) {\n                return _ref8.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x12, _x13) {\n    return _ref7.apply(this, arguments);\n  };\n}());\napp.post('/api/articles/:name/add-comment',\n/*#__PURE__*/\nfunction () {\n  var _ref9 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee10(req, res) {\n    var _req$body, username, commentText, articleName;\n\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _req$body = req.body, username = _req$body.username, commentText = _req$body.commentText;\n            articleName = req.params.name;\n            useDataBase(\n            /*#__PURE__*/\n            function () {\n              var _ref10 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee9(db) {\n                var info, updatedInfo;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.next = 2;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 2:\n                        info = _context9.sent;\n                        _context9.next = 5;\n                        return db.collection('articles').updateOne({\n                          name: articleName\n                        }, {\n                          '$set': {\n                            comments: info.comments.concat({\n                              username: username,\n                              commentText: commentText\n                            })\n                          }\n                        });\n\n                      case 5:\n                        _context9.next = 7;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 7:\n                        updatedInfo = _context9.sent;\n                        res.status(200).json(updatedInfo);\n\n                      case 9:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n\n              return function (_x17) {\n                return _ref10.apply(this, arguments);\n              };\n            }(), res);\n\n          case 3:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref9.apply(this, arguments);\n  };\n}());\napp.post('/api/add-article',\n/*#__PURE__*/\nfunction () {\n  var _ref11 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee12(req, res) {\n    var _req$body2, name, text, file, type;\n\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _req$body2 = req.body, name = _req$body2.name, text = _req$body2.text, file = _req$body2.file, type = _req$body2.type;\n            console.log(file.name);\n            console.log(type);\n            useDataBase(\n            /*#__PURE__*/\n            function () {\n              var _ref12 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee11(db) {\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        _context11.next = 2;\n                        return db.collection('articles').insert({\n                          \"name\": name,\n                          \"votes\": 0,\n                          \"comments\": [],\n                          \"text\": text,\n                          \"objectId\": -1\n                        });\n\n                      case 2:\n                        res.status(200);\n\n                      case 3:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11);\n              }));\n\n              return function (_x20) {\n                return _ref12.apply(this, arguments);\n              };\n            }(), res);\n\n          case 4:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n\n  return function (_x18, _x19) {\n    return _ref11.apply(this, arguments);\n  };\n}());\napp.post('/api/image', upload.single('photo'),\n/*#__PURE__*/\nfunction () {\n  var _ref13 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee13(req, res) {\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            console.log(req.file);\n\n          case 1:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n\n  return function (_x21, _x22) {\n    return _ref13.apply(this, arguments);\n  };\n}()); //make this listen on port 8000 and print started on start up\n\napp.listen(8000, function () {\n  return console.log('started');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJtdWx0ZXIiLCJyZXF1aXJlIiwiZGVzdCIsImFwcCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwidXNlRGF0YUJhc2UiLCJteUZ1bmN0aW9uIiwicmVzIiwiTW9uZ29DbGllbnQiLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwiY2xpZW50IiwiZGIiLCJjbG9zZSIsInN0YXR1cyIsIm1lc3NhZ2UiLCJlcnJvciIsInBvc3QiLCJyZXEiLCJhcnRpY2xlTmFtZSIsInBhcmFtcyIsIm5hbWUiLCJjb2xsZWN0aW9uIiwiZmluZE9uZSIsImluZm8iLCJ1cGRhdGVPbmUiLCJ2b3RlcyIsInJlc3VsdCIsImdldCIsImZpbmQiLCJ0b0FycmF5IiwiYm9keSIsInVzZXJuYW1lIiwiY29tbWVudFRleHQiLCJjb21tZW50cyIsImNvbmNhdCIsInVwZGF0ZWRJbmZvIiwidGV4dCIsImZpbGUiLCJ0eXBlIiwiY29uc29sZSIsImxvZyIsImluc2VydCIsInVwbG9hZCIsInNpbmdsZSIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFDQSxJQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBRCxNQUFNLENBQUM7QUFBQ0UsRUFBQUEsSUFBSSxFQUFFO0FBQVAsQ0FBRCxDQUFOO0FBR0EsSUFBTUMsR0FBRyxHQUFHLDBCQUFaLEMsQ0FDQTtBQUNBO0FBRUE7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0MsSUFBWCxFQUFSLEUsQ0FHQTs7U0FDZUMsVzs7RUFZZjs7Ozs7OzBCQVpBLG1CQUE0QkMsVUFBNUIsRUFBd0NDLEdBQXhDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFFNkJDLHFCQUFZQyxPQUFaLENBQW9CLDZGQUFwQixFQUFtSDtBQUFDQyxjQUFBQSxlQUFlLEVBQUM7QUFBakIsYUFBbkgsQ0FGN0I7O0FB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QUFBO0FBQUE7QUFBQSxLLENBSUE7O0FBQ0FyQyxHQUFHLENBQUM0QyxNQUFKLENBQVcsSUFBWCxFQUFpQjtBQUFBLFNBQU1MLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFNBQVosQ0FBTjtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcd2lsbFxcT25lRHJpdmVcXERvY3VtZW50c1xcQ29sbGVnZSBKTVVcXDIwMTkgRiBTZW1lc3RlclxccHNfZGVtb1xccHNfZ2l0XFxwZXJmZWN0X3NlbnNlX2RlbW9cXHBzX2RlbW9fYmFja2VuZFxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XHJcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcclxuaW1wb3J0IHtNb25nb0NsaWVudH0gZnJvbSAnbW9uZ29kYic7XHJcbmNvbnN0IG11bHRlciA9IHJlcXVpcmUoJ211bHRlcicpO1xyXG5tdWx0ZXIoe2Rlc3Q6ICd1cGxvYWRzLyd9KVxyXG5cclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuLy9xdWljayBsaW5rIHRvIG15IG1vbmdvIHNlcnZlclxyXG4vL21vbmdvIFwibW9uZ29kYitzcnY6Ly9jbHVzdGVyMC1oc2xvei5nY3AubW9uZ29kYi5uZXQvYWRtaW5cIiAgLS11c2VybmFtZSB3aWxsa1xyXG5cclxuLy9hbGxvd3MgZm9yIGVhc3kgcGFyc2luZyBvZiB0aGUganNvblxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuXHJcblxyXG4vL3JldXNhYmxlIHNldCB1cCB0ZWFyZG93biBkYXRhYmFzZSBmdW5jdGlvblxyXG5hc3luYyBmdW5jdGlvbiB1c2VEYXRhQmFzZSAobXlGdW5jdGlvbiwgcmVzKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGNsaWVudCA9IGF3YWl0IE1vbmdvQ2xpZW50LmNvbm5lY3QoXCJtb25nb2RiK3NydjovL3dpbGxrOnVTM0wzc2NAY2x1c3RlcjAtaHNsb3ouZ2NwLm1vbmdvZGIubmV0L3Rlc3Q/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5XCIsIHt1c2VOZXdVcmxQYXJzZXI6dHJ1ZX0gKVxyXG4gICAgICAgIGNvbnN0IGRiID0gY2xpZW50LmRiKFwicHNfZGF0YVwiKTtcclxuICAgICAgICBhd2FpdCBteUZ1bmN0aW9uKGRiKTtcclxuICAgICAgICBjbGllbnQuY2xvc2UoKTtcclxuXHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHttZXNzYWdlOidkYXRhYmFzZSBmYWlsdXJlJywgZXJyb3J9KVxyXG4gICAgfVxyXG59XHJcblxyXG4vL3Vwdm90ZSBlbmRwb2ludCwgcG9zdCBiZWNhdXNlIGl0IGNoYW5nZXMgZGF0YSBpbiBkYXRhYmFzZVxyXG5hcHAucG9zdCgnL2FwaS9hcnRpY2xlcy86bmFtZS91cHZvdGUnLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIHVzZURhdGFCYXNlKCBhc3luYyhkYikgPT4ge1xyXG4gICAgICAgIC8vZnVuY3Rpb24gcGFzc2VkIGludG8gdGhlIGRhdGFiYXNlIGZ1bmNcclxuICAgICAgICBjb25zdCBhcnRpY2xlTmFtZSA9IHJlcS5wYXJhbXMubmFtZTtcclxuICAgICAgICBjb25zdCBpbmZvID0gYXdhaXQgZGIuY29sbGVjdGlvbignYXJ0aWNsZXMnKS5maW5kT25lKHtuYW1lOiBhcnRpY2xlTmFtZX0pO1xyXG4gICAgICAgIGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2FydGljbGVzJykudXBkYXRlT25lKFxyXG4gICAgICAgICAgICB7bmFtZTogYXJ0aWNsZU5hbWV9LFxyXG4gICAgICAgICAgICB7JyRzZXQnIDoge1xyXG4gICAgICAgICAgICAgICAgdm90ZXM6IGluZm8udm90ZXMgKyAxLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICk7ICBcclxuICAgICAgICBjb25zdCByZXN1bHQ9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2FydGljbGVzJykuZmluZE9uZSh7bmFtZTogYXJ0aWNsZU5hbWV9KVxyXG4gICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdCk7XHJcbiAgICB9LCByZXMpXHJcbiAgXHJcbn0pO1xyXG5cclxuYXBwLnBvc3QoJy9hcGkvYXJ0aWNsZXMvOm5hbWUvZG93bnZvdGUnLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIHVzZURhdGFCYXNlKCBhc3luYyhkYikgPT4ge1xyXG4gICAgICAgIGNvbnN0IGFydGljbGVOYW1lID0gcmVxLnBhcmFtcy5uYW1lO1xyXG4gICAgICAgIGNvbnN0IGluZm8gPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCdhcnRpY2xlcycpLmZpbmRPbmUoe25hbWU6IGFydGljbGVOYW1lfSlcclxuICAgICAgICBhd2FpdCBkYi5jb2xsZWN0aW9uKCdhcnRpY2xlcycpLnVwZGF0ZU9uZShcclxuICAgICAgICAgICAge25hbWU6IGFydGljbGVOYW1lfSxcclxuICAgICAgICAgICAgeyckc2V0Jzp7XHJcbiAgICAgICAgICAgICAgICB2b3RlczogaW5mby52b3RlcyAtIDEsXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgKTsgIFxyXG4gICAgICAgIGNvbnN0IHJlc3VsdD0gYXdhaXQgZGIuY29sbGVjdGlvbignYXJ0aWNsZXMnKS5maW5kT25lKHtuYW1lOiBhcnRpY2xlTmFtZX0pXHJcbiAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24ocmVzdWx0KTtcclxuICAgIH0sIHJlcylcclxuICBcclxufSk7XHJcblxyXG4vL3JldHJlaXZlIGFydGlsY2UgYnkgbmFtZSwgdW5kZWZpbmVkIGlmIHR3byBhcnRpY2xlcyBoYXZlIHRoZSBzYW1lIG5hbWVcclxuYXBwLmdldCgnL2FwaS9hcnRpY2xlcy86bmFtZScsIGFzeW5jIChyZXEsIHJlcykgPT5cclxue1xyXG4gICAgdXNlRGF0YUJhc2UoYXN5bmMoZGIpID0+IHtcclxuICAgICAgICBjb25zdCBhcnRpY2xlTmFtZSA9IHJlcS5wYXJhbXMubmFtZTtcclxuICAgICAgICBjb25zdCBpbmZvID0gYXdhaXQgZGIuY29sbGVjdGlvbignYXJ0aWNsZXMnKS5maW5kT25lKHtuYW1lOiBhcnRpY2xlTmFtZX0pXHJcbiAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oaW5mbyk7XHJcbiAgICB9LCByZXMpXHJcbn0pXHJcblxyXG4vL2xpc3RpbmcgZm9yIHRoZSBsaXN0XHJcbmFwcC5nZXQoJy9hcGkvYXJ0aWNsZXMtbWFpbi9hbGwnLCBhc3luYyAocmVxLCByZXMpID0+XHJcbntcclxuICAgIHVzZURhdGFCYXNlKGFzeW5jKGRiKSA9PiB7XHJcbiAgICAgICAgLy90aGlzIHNob3VsZCByZXRyaWV2ZSBqdXN0IHRoZSBuYW1lIGFuZCB2b3RlcywgZG9lcyBub3QgYXBwZWFyIHRvIHdvcmtcclxuICAgICAgICAvLy50b0FycmF5IGlzIGFjdHVhbGx5IHdoYXQgbWFrZXMgdGhlIGNhbGwgd29yayBiZWNhdXNlIG1vbmdvXHJcbiAgICAgICAgY29uc3QgaW5mbyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2FydGljbGVzJykuZmluZCh7fSx7bmFtZToxLHZvdGVzOjF9KS50b0FycmF5KCk7XHJcbiAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oaW5mbyk7XHJcbiAgICB9LCByZXMpXHJcbn0pXHJcblxyXG5hcHAucG9zdCgnL2FwaS9hcnRpY2xlcy86bmFtZS9hZGQtY29tbWVudCcsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3Qge3VzZXJuYW1lLCBjb21tZW50VGV4dH0gPSByZXEuYm9keTtcclxuICAgIGNvbnN0IGFydGljbGVOYW1lID0gcmVxLnBhcmFtcy5uYW1lO1xyXG4gICAgdXNlRGF0YUJhc2UoYXN5bmMoZGIpID0+IHtcclxuICAgICAgICBjb25zdCBpbmZvID0gYXdhaXQgZGIuY29sbGVjdGlvbignYXJ0aWNsZXMnKS5maW5kT25lKHtuYW1lOiBhcnRpY2xlTmFtZX0pO1xyXG4gICAgICAgIGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2FydGljbGVzJykudXBkYXRlT25lKFxyXG4gICAgICAgICAgICB7bmFtZTogYXJ0aWNsZU5hbWV9LFxyXG4gICAgICAgICAgICB7JyRzZXQnIDoge1xyXG4gICAgICAgICAgICAgICAgY29tbWVudHM6IGluZm8uY29tbWVudHMuY29uY2F0KHt1c2VybmFtZSwgY29tbWVudFRleHR9KVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICk7ICBcclxuICAgICAgICBjb25zdCB1cGRhdGVkSW5mbyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2FydGljbGVzJykuZmluZE9uZSh7bmFtZTogYXJ0aWNsZU5hbWV9KTtcclxuICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih1cGRhdGVkSW5mbyk7XHJcbiAgICB9LCByZXMpXHJcbn0pXHJcblxyXG5hcHAucG9zdCgnL2FwaS9hZGQtYXJ0aWNsZScsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3Qge25hbWUsIHRleHQsIGZpbGUsIHR5cGV9ID0gcmVxLmJvZHk7XHJcbiAgICBjb25zb2xlLmxvZyhmaWxlLm5hbWUpXHJcbiAgICBjb25zb2xlLmxvZyh0eXBlKVxyXG4gICAgdXNlRGF0YUJhc2UoYXN5bmMoZGIpID0+IHtcclxuICAgICAgICBhd2FpdCBkYi5jb2xsZWN0aW9uKCdhcnRpY2xlcycpLmluc2VydChcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgXCJuYW1lXCI6bmFtZSxcclxuICAgICAgICAgICAgICAgIFwidm90ZXNcIjowLFxyXG4gICAgICAgICAgICAgICAgXCJjb21tZW50c1wiOltdLFxyXG4gICAgICAgICAgICAgICAgXCJ0ZXh0XCI6dGV4dCxcclxuICAgICAgICAgICAgICAgIFwib2JqZWN0SWRcIjotMSxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIClcclxuICAgICAgICByZXMuc3RhdHVzKDIwMCk7XHJcbiAgICB9LCByZXMpXHJcbn0pXHJcblxyXG5hcHAucG9zdCgnL2FwaS9pbWFnZScsIHVwbG9hZC5zaW5nbGUoJ3Bob3RvJyksIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc29sZS5sb2cocmVxLmZpbGUpO1xyXG59KVxyXG5cclxuLy9tYWtlIHRoaXMgbGlzdGVuIG9uIHBvcnQgODAwMCBhbmQgcHJpbnQgc3RhcnRlZCBvbiBzdGFydCB1cFxyXG5hcHAubGlzdGVuKDgwMDAsICgpID0+IGNvbnNvbGUubG9nKCdzdGFydGVkJykpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "multer",
        "require",
        "dest",
        "app",
        "use",
        "bodyParser",
        "json",
        "useDataBase",
        "myFunction",
        "res",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "client",
        "db",
        "close",
        "status",
        "message",
        "error",
        "post",
        "req",
        "articleName",
        "params",
        "name",
        "collection",
        "findOne",
        "info",
        "updateOne",
        "votes",
        "result",
        "get",
        "find",
        "toArray",
        "body",
        "username",
        "commentText",
        "comments",
        "concat",
        "updatedInfo",
        "text",
        "file",
        "type",
        "console",
        "log",
        "insert",
        "upload",
        "single",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\will\\OneDrive\\Documents\\College JMU\\2019 F Semester\\ps_demo\\ps_git\\perfect_sense_demo\\ps_demo_backend\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport {MongoClient} from 'mongodb';\r\nconst multer = require('multer');\r\nmulter({dest: 'uploads/'})\r\n\r\n\r\nconst app = express();\r\n//quick link to my mongo server\r\n//mongo \"mongodb+srv://cluster0-hsloz.gcp.mongodb.net/admin\"  --username willk\r\n\r\n//allows for easy parsing of the json\r\napp.use(bodyParser.json());\r\n\r\n\r\n//reusable set up teardown database function\r\nasync function useDataBase (myFunction, res) {\r\n    try {\r\n        const client = await MongoClient.connect(\"mongodb+srv://willk:uS3L3sc@cluster0-hsloz.gcp.mongodb.net/test?retryWrites=true&w=majority\", {useNewUrlParser:true} )\r\n        const db = client.db(\"ps_data\");\r\n        await myFunction(db);\r\n        client.close();\r\n\r\n    } catch (error) {\r\n        res.status(500).json({message:'database failure', error})\r\n    }\r\n}\r\n\r\n//upvote endpoint, post because it changes data in database\r\napp.post('/api/articles/:name/upvote', async (req, res) => {\r\n    useDataBase( async(db) => {\r\n        //function passed into the database func\r\n        const articleName = req.params.name;\r\n        const info = await db.collection('articles').findOne({name: articleName});\r\n        await db.collection('articles').updateOne(\r\n            {name: articleName},\r\n            {'$set' : {\r\n                votes: info.votes + 1,\r\n                },\r\n            }\r\n        );  \r\n        const result= await db.collection('articles').findOne({name: articleName})\r\n        res.status(200).json(result);\r\n    }, res)\r\n  \r\n});\r\n\r\napp.post('/api/articles/:name/downvote', async (req, res) => {\r\n    useDataBase( async(db) => {\r\n        const articleName = req.params.name;\r\n        const info = await db.collection('articles').findOne({name: articleName})\r\n        await db.collection('articles').updateOne(\r\n            {name: articleName},\r\n            {'$set':{\r\n                votes: info.votes - 1,\r\n                },\r\n            }\r\n        );  \r\n        const result= await db.collection('articles').findOne({name: articleName})\r\n        res.status(200).json(result);\r\n    }, res)\r\n  \r\n});\r\n\r\n//retreive artilce by name, undefined if two articles have the same name\r\napp.get('/api/articles/:name', async (req, res) =>\r\n{\r\n    useDataBase(async(db) => {\r\n        const articleName = req.params.name;\r\n        const info = await db.collection('articles').findOne({name: articleName})\r\n        res.status(200).json(info);\r\n    }, res)\r\n})\r\n\r\n//listing for the list\r\napp.get('/api/articles-main/all', async (req, res) =>\r\n{\r\n    useDataBase(async(db) => {\r\n        //this should retrieve just the name and votes, does not appear to work\r\n        //.toArray is actually what makes the call work because mongo\r\n        const info = await db.collection('articles').find({},{name:1,votes:1}).toArray();\r\n        res.status(200).json(info);\r\n    }, res)\r\n})\r\n\r\napp.post('/api/articles/:name/add-comment', async (req, res) => {\r\n    const {username, commentText} = req.body;\r\n    const articleName = req.params.name;\r\n    useDataBase(async(db) => {\r\n        const info = await db.collection('articles').findOne({name: articleName});\r\n        await db.collection('articles').updateOne(\r\n            {name: articleName},\r\n            {'$set' : {\r\n                comments: info.comments.concat({username, commentText})\r\n                },\r\n            }\r\n        );  \r\n        const updatedInfo = await db.collection('articles').findOne({name: articleName});\r\n        res.status(200).json(updatedInfo);\r\n    }, res)\r\n})\r\n\r\napp.post('/api/add-article', async (req, res) => {\r\n    const {name, text, file, type} = req.body;\r\n    console.log(file.name)\r\n    console.log(type)\r\n    useDataBase(async(db) => {\r\n        await db.collection('articles').insert(\r\n            {\r\n                \"name\":name,\r\n                \"votes\":0,\r\n                \"comments\":[],\r\n                \"text\":text,\r\n                \"objectId\":-1,\r\n            }\r\n        )\r\n        res.status(200);\r\n    }, res)\r\n})\r\n\r\napp.post('/api/image', upload.single('photo'), async (req, res) => {\r\n    console.log(req.file);\r\n})\r\n\r\n//make this listen on port 8000 and print started on start up\r\napp.listen(8000, () => console.log('started'));"
      ]
    },
    "sourceType": "script",
    "mtime": 1570928678918
  }
}